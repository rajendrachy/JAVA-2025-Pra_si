Java Exception Handling MCQs

1. Which class is at the top of the Java exception hierarchy?
A) Exception
B) Throwable
C) RuntimeException
D) Error

Answer: B) Throwable

-----------Java Exception Hierarchy-----------
java.lang.Object
↓
java.lang.Throwable → This is the root of all errors and exceptions.

Subclasses of Throwable:
Error – Represents serious system errors (e.g., OutOfMemoryError).
Usually not handled by programs.
Exception – Represents exceptions that programs might want to catch.








2. Which of the following is a checked exception?
A) ArithmeticException
B) NullPointerException
C) IOException
D) ArrayIndexOutOfBoundsException

Answer: C) IOException
-------------Checked vs Unchecked Exceptions in Java------------

Checked exceptions:
These are exceptions checked by the compiler at compile time.
The programmer must handle them using try-catch or declare them with throws.
Example: IOException, SQLException, FileNotFoundException.
Unchecked exceptions (RuntimeExceptions):
These are not checked by the compiler.
Occur due to programming errors like dividing by zero or null access.

Examples: ArithmeticException, NullPointerException, ArrayIndexOutOfBoundsException.




------------Analyzing the options-------------
Exception	Checked/Unchecked	Reason
ArithmeticException	Unchecked	Happens at runtime (e.g., divide by zero)
NullPointerException	Unchecked	Happens when accessing null reference
IOException	Checked	Must handle file/network errors explicitly
ArrayIndexOutOfBoundsException	Unchecked	Happens at runtime when index is invalid










3. Which of the following is an unchecked exception?
A) IOException
B) RuntimeException
C) ClassNotFoundException
D) SQLException

Answer: B) RuntimeException











4. Which keyword is used to explicitly throw an exception in Java?
A) throws
B) throw
C) catch
D) finally

Answer: B) throw









5. What will happen if an exception is not caught in Java?
A) Program terminates and displays an error message
B) Program continues execution
C) Exception is ignored
D) Finally block is skipped

Answer: A) Program terminates and displays an error message









6. Which block in Java exception handling is always executed, whether an exception occurs or not?
A) try
B) catch
C) finally
D) throw

Answer: C) finally











7. Which of the following can be caught by a catch block?
A) Only RuntimeExceptions
B) Only Errors
C) Any subclass of Throwable
D) Only Checked Exceptions

Answer: C) Any subclass of Throwable














8. Which of the following is true about throw and throws in Java?
A) throw is used to declare exceptions in a method signature
B) throws is used to throw an exception
C) throw is used to throw an exception, throws is used to declare exceptions
D) Both are identical in functionality

Answer: C) throw is used to throw an exception, throws is used to declare exceptions

-------------throw vs throws-----------------
Keyword	Usage	Example
throw	Used to actually throw an exception object at runtime	throw new ArithmeticException("Error");
throws	Used in a method declaration to declare the exceptions that a method may throw	void readFile() throws IOException { ... }
-------------- Examples-------------------
Using throw:
public void checkAge(int age) {
    if (age < 18) {
        throw new ArithmeticException("Not eligible to vote");
    }
}


Using throws:

public void readFile() throws IOException {
    FileReader file = new FileReader("data.txt"); // may throw IOException
}













9. Which of these exceptions is thrown for division by zero?
A) ArithmeticException
B) IOException
C) NullPointerException
D) ArrayIndexOutOfBoundsException

Answer: A) ArithmeticException








10. Consider the following code:

try {
  int a = 0;
  int b = 42 / a;
} catch(ArithmeticException e) {
  System.out.println("Divide by 0");
} catch(Exception e) {
  System.out.println("Other exception");
}


Which catch block will execute?
A) catch(Exception e)
B) catch(ArithmeticException e)
C) Both catch blocks
D) None

Answer: B) catch(ArithmeticException e)













11. What will happen if multiple catch blocks match an exception?
A) All matching catch blocks execute
B) Only the first matching catch block executes
C) Program terminates
D) Compilation error

Answer: B) Only the first matching catch block executes












12. Which of the following statements is true about RuntimeException?
A) It must always be caught
B) It must always be declared in the throws clause
C) It is unchecked and does not require mandatory catch
D) It cannot be thrown manually

Answer: C) It is unchecked and does not require mandatory catch















13. Which of the following is a valid way to declare exceptions in a method?
A) public void test() throw IOException
B) public void test() throws IOException
C) public void test() throw new IOException()
D) public void test() catch IOException

Answer: B) public void test() throws IOException









14. Consider the method declaration:

public void exampleMethod() throws ExampleException {
  throw new ExampleException();
}

What type of exception is ExampleException likely to be?
A) Error
B) Checked exception
C) RuntimeException
D) None

Answer: B) Checked exception

-------The method declares throws ExampleException.-------------
In Java, only checked exceptions need to be declared with throws in the method signature.
Unchecked exceptions (subclasses of RuntimeException) do not require throws.




-----------Here’s a short version of Compile-time vs Runtime exceptions with examples:-----------------

Type	                Occurs When	                        Handling	                         Example
Checked	           Compile-time	                Must handle (try-catch or throws)	           IOException – reading a file
Unchecked	         Runtime	                    Optional	                                   ArithmeticException – divide by zero













15. What is the purpose of using try-catch-finally blocks in Java?
A) To improve program performance
B) To handle runtime errors and maintain normal flow
C) To declare variables
D) To terminate the program

Answer: B) To handle runtime errors and maintain normal flow














16. What is the output of the following code?

try {
  int a = 0;
  int b = 5 / a;
} catch(NullPointerException e) {
  System.out.println("Null pointer");
} finally {
  System.out.println("Finally block executed");
}


A) Null pointer
B) Finally block executed
C) Runtime error without output
D) Both A and B

Answer: B) Finally block executed























17. Which branch in Java exception hierarchy is used for errors that are not expected to be caught?
A) Exception
B) RuntimeException
C) Error
D) Throwable

Answer: C) Error
-----------StackOverflowError is an Error, not an Exception.------------









18. What will happen if a method throws multiple exceptions?
A) Only the first exception is thrown
B) All exceptions are thrown simultaneously
C) Exceptions must be listed in the throws clause separated by commas
D) Compiler error

Answer: C) Exceptions must be listed in the throws clause separated by commas


















19. Which of the following is true about custom exceptions?
A) Custom exceptions must inherit from Error
B) Custom exceptions must inherit from Exception
C) Custom exceptions cannot be thrown
D) Custom exceptions are always unchecked

Answer: B) Custom exceptions must inherit from Exception



---------------- Why not the other options------------------
Option	Reason
A) Must inherit from Error	❌ Wrong. Error is for serious system-level errors, not custom exceptions.
B) Must inherit from Exception	✅ Correct. Standard way to create a custom exception.
C) Cannot be thrown	❌ Wrong. Custom exceptions can be thrown using throw.
D) Always unchecked	❌ Wrong. Only unchecked if you extend RuntimeException.










20. Consider this code snippet:

int[] c = {1};
c[42] = 99;


Which exception will this generate?
A) NullPointerException
B) ArrayIndexOutOfBoundsException
C) ArithmeticException
D) IOException

Answer: B) ArrayIndexOutOfBoundsException




